var path = require('path'),
	http = require('http'),

	_ = require('lodash'),
	app = require(path.join(__dirname, '..', 'app')),
	port = _.toInteger(process.env.PORT) || 3000,
	debug = require('debug')('express-boilerplate:server'),
	server = http.createServer(app),

	onError = function (error) {
		var bind;

		if (error.syscall !== 'listen') {
			throw error;
		}

		bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

		// handle specific listen errors with friendly messages
		switch (error.code) {
		case 'EACCES':
			throw new Error(`${bind} requires elevated privileges`);
		case 'EADDRINUSE':
			throw new Error(`${bind} is already in use`);
		default:
			throw error;
		}
	},

	onListening = function () {
		var addr = server.address(),
			bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;

		debug(`Listening on ${bind}`);
	};

app.set('port', port);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
